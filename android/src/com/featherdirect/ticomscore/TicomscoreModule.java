/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2013 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.featherdirect.ticomscore;
import java.util.HashMap;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.util.TiConvert;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

import com.comscore.analytics.comScore;

@Kroll.module(name="Ticomscore", id="com.featherdirect.ticomscore")
public class TicomscoreModule extends KrollModule
{

	// Standard Debugging variables
	private static final String TAG = "TicomscoreModule";

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;
	
	public TicomscoreModule()
	{
		super();
	}



	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(TAG, "Initialized in AppCreate");
		comScore.setAppContext(TiApplication.getInstance().getApplicationContext());
	}

	// Methods
	@Kroll.method
	public void setAppName(String appName)
	{
		comScore.setAppName(appName);
		Log.d(TAG, "comScore AppName set to " + appName);
	}

	@Kroll.method
	public void setCustomerC2(String customerC2)
	{
		comScore.setCustomerC2(customerC2);
		Log.d(TAG, "comScore CustomerC2 set");
	}

	@Kroll.method
	public void setPublisherSecret(String publisherSecret)
	{
		comScore.setPublisherSecret(publisherSecret);
		Log.d(TAG, "comScore PublisherSecret set");
	}

	@Kroll.method
	public void enableAutoUpdate(HashMap args)
	{
		KrollDict dict = new KrollDict(args);
		int interval = dict.optInt("interval", 120);
		boolean foregroundOnly = dict.optBoolean("foregroundOnly", true);
		comScore.enableAutoUpdate(interval, foregroundOnly);
		Log.d(TAG, "comScore enableAutoUpdate interval set to "+interval);
		Log.d(TAG, "comScore enableAutoUpdate foregroundOnly set to "+foregroundOnly);
	}

	@Kroll.method
	public void onEnterForeground()
	{
		comScore.onEnterForeground();
		Log.d(TAG, "comScore onEnterForeground");
	}

	@Kroll.method
	public void onExitForeground()
	{
		comScore.onExitForeground();
		Log.d(TAG, "comScore onExitForeground");
	}
	
	@Kroll.method
	public void onUxActive()
	{
		comScore.onUxActive();
		Log.d(TAG, "comScore onUxActive");
	}

	@Kroll.method
	public void onUxInactive()
	{
		comScore.onUxInactive();
		Log.d(TAG, "comScore onUxInactive");
	}


}

